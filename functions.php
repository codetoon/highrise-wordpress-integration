<?php
//=====================================================================
//			Connect To Highrise
//=====================================================================

	function initiateApi()
	{
		require_once("lib/HighriseAPI.class.php");
		
		$highrise = new HighriseAPI();
		$highrise->setAccount( ACCOUNT_NAME );
		$highrise->setToken( API_TOKEN );
		$highrise->debug = false;
		return $highrise;
		
	
	}
	


	//=====================================================================
	//			Save Details On Highrise
	//=====================================================================
	
	
	function saveDetailsOnHighrise()
	{
		$highrise = initiateApi();
	
		if( $_POST['contact-form-id'] == FORM_ID )			//$_POST['contact-form-id'] will give the id of the form. Make sure you have such field in your contact form. If not make a hidden field.
		{
			
			try{
				
				//
				//Get required details  IMPORTANT: Change the field names according to your form.
				//
					
				$name 			= $_POST['g86-name'];				//Name of the contact
				$emailId 		= $_POST['g86-email'];				//Email of the contact
				$noteBody 		= $_POST['g86-message'];			//Message in the form to be stored as note in Highrise
				$taskCategoryId = TASK_CATEGORY_ID;				//Task Category ID
				$timeFrame 		= TIME_FRAME;					//Set the time frame for task generated at Highrise
				$noteSubject 	= SUBJECT_NOTE;					//Set the subject of each note
				$ownerId 		= OWNER_ID;						//To whom the task will be assigned
				
				
				
				//
				// Get a persons' ID if person exists with the entered mailId.
				//
				
				$personId = '';
				$people = $highrise->findPeopleByEmail($emailId);
				foreach($people as $person)
				{
					$personId = $person->getId();
				}
				
				
				//
				//If no person found with the entered email ID add the person (Modify the fields according to the form)
				//
				
				if( empty( $personId ) )
				{
					$person = new HighrisePerson($highrise);
					$person->setFirstName($name);
					$person->addEmailAddress($emailId);
					$person->save();
				
					$people = $highrise->findPeopleByEmail($emailId);
					foreach($people as $person)
					{
						$personId = $person->getId();
					}
				}
				
				
				//
				//Add Note
				//
				
				$note = new HighriseNote($highrise);
				$note->setSubjectId($personId);
				$note->setSubjectType($noteSubject);
				$note->setBody($noteBody);
				$note->save();
				
				
				//
				// Create a task
				//
				
				$task = new HighriseTask($highrise);
				$task->setBody("Follow up with $name by Email");
				$task->setPublic(true);
				$task->setCategoryId($taskCategoryId);
				$task->setFrame($timeFrame);
				$task->setSubjectId($personId);
				$task->setSubjectName($name);
				$task->setSubjectType($noteSubject);
				$task->setOwnerId($ownerId);
				$task->save();
				
				
			} //End try
			
			catch (Exception $e){
				//Send an email to the admin, in case there is any exception generated by Highrise API.
			
				$body = "The data was not stored in Highrise.
				Get the data for this entry from  WordPress admin panel.
				Please verify the credentials and if the problem persists, contact site admin.<br>
			
				Name: $name<br>
				EmailId = $emailId<br>
				Note:<br>
				$noteBody";
					
				$body = nl2br($body);
					
				sendEmail($body);
			}
				
		}
	}
	
	
	function sendEmail($body)
	{
		$from 		= FROM_EMAIL;
		$to 		= TO_EMAIL;
		$subject 	= EMAIL_SUBJECT;
	
		if(empty($from) || empty($to) || empty($subject) || empty($body))
		{
			return false;
		}
	
		if(!(filter_var($to, FILTER_VALIDATE_EMAIL)))
		{
			return false;
		}
	
		$headers = "MIME-Version: 1.0" . "\r\n";
		$headers .= "Content-type:text/html;charset=UTF-8" . "\r\n";
		$headers .= "From: $from \r\n";
	
		wp_mail($to,$subject,$body,$headers);
	}
				
				
				
				
?>